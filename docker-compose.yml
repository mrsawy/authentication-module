version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: app-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
    volumes:
      - mongodb_data:/data/db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: app-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NATS Message Broker
  nats:
    image: nats:2.10-alpine
    container_name: app-nats
    restart: unless-stopped
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js", "-m", "8222"]
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NestJS Backend Server
  server:
    build:
      context: ./apps/server
      dockerfile: Dockerfile
    container_name: app-server
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI_DEV: mongodb://admin:password123@mongodb:27017/app-db?authSource=admin
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      SALT_ROUNDS: 10
      NATS_URLS: nats://nats:4222
    depends_on:
      mongodb:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./apps/server:/app
      - /app/node_modules
  client:
    build:
      context: .
      dockerfile: ./apps/client/Dockerfile
    container_name: app-client
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      AUTH_COOKIE_NAME: auth_token
      NATS_URLS: nats://nats:4222
      REDIS_URL: redis://redis:6379
    depends_on:
      - server
      - redis
      - nats
    networks:
      - app-network
networks:
  app-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data: